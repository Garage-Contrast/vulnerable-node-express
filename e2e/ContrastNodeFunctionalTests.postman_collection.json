{
	"info": {
		"_postman_id": "63c24327-9a8f-4b49-b19c-6d812ff6eb2d",
		"name": "ContrastNodeFunctionalTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Root Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eaefc358-be7c-46a5-9040-b04284d3c8f8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{hostname}}/",
					"protocol": "{{scheme}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "41e56c8d-43d0-4e77-aaba-326cd743f2a8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Expected number of users\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.length).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{hostname}}/users",
					"protocol": "{{scheme}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "43f316bb-c237-4c27-b209-8d8d262efa9c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check email retrieved and matches\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.email).to.eql(\"kim@gmail.com\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{hostname}}/users/2",
					"protocol": "{{scheme}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b6a55425-8b8d-48ff-a842-7118f7d6924a",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Check email retrieved and matches\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.email).to.eql(\"pmtest@example.com\");",
							"    pm.environment.set(\"created_id\", jsonData.data.id);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"pmtest@example.com\",\n    \"password\": \"123456789\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{scheme}}://{{hostname}}/users",
					"protocol": "{{scheme}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86d9c745-fbb1-4b7b-ab4f-9ced05acae4f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check email updated\", function () {",
							"    var jsonData = pm.response.json();",
							"    var updatedId = pm.variables.get(\"created_id\");",
							"    var entry = jsonData.data.filter((o) => {return o.id === updatedId});",
							"    pm.expect(entry[0].email).to.eql(\"pmtestupdate@example.com\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"pmtestupdate@example.com\",\n    \"password\": \"123456789\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{scheme}}://{{hostname}}/users/{{created_id}}",
					"protocol": "{{scheme}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"users",
						"{{created_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3446abc1-7799-46ca-b4f6-67f0fe16a5f0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{scheme}}://{{hostname}}/users/5",
					"protocol": "{{scheme}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"users",
						"5"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}